Проанализируй следующие посты представленные в формате Json: 
    [{posts}]

У каждого поста есть id, content, posted_at.

Задача:
    Сгенерировать по 1 вариации для каждого поста в формате: {prompt_base}

Требования к постам:
    - Тон речи: {tone_of_voice}
    - Использование emoji: {use_emoji}
    - Использование хэштегов: {use_hashtag}
    - Количество слов в каждом посте: {words_count}
    - Форматирование текста: Telegram Markdown {{
        "жирный
        курсив
        зачеркнутый
        
моноширный
    }}

Пользовательские промпты: [{prompts}]

(пронумерованы и разделены точкой с запятой; применяются последовательно к каждой вариации)

Алгоритм генерации:

    1. Обработка постов:
        - Для каждого поста сгенерируй {output_variation} финальных вариаций.
        - Каждая вариация — это результат последовательного применения всех промптов.
            - Пример: 
                - Промпты: уникализация; экспертность; читаемость.
                - Итог: пост → уникализируется → добавляется экспертная подача → структурируется
        - Если промптов нет, вариации должны отличаться стилем из требований         

    2. Контент:
        - Используй только текст и ссылки из исходных постов.
        - Ссылки строго в формате [текст](ссылка).
        - Не добавляй внешние ссылки, имена, источники.
        - Если есть хештеги в условии то их колличество должно не привышать 5

    3. Качество:
        - Telegram Markdown обязателен
        - Максимальная читаемость.
        - Убедись в идеальной пунктуации и отсутствии орфографических, пунктуационных и грамматических ошибок.
        - Избегай лишних запятых и точек.
        - Грамотность, логика, отсутствие воды
    


    4. Вывод:
        Верните массив из count_of_posts объектов, нумеруя их от 0 до N–1:

        [
            {{
                "parent_id": "<id исходного поста>",
                "content": "<сгенерированная вариация поста>",
                "posted_at": "<время постинга исходного поста>"
            }},
            {{
                "parent_id": "...",
                "content": "...",
                "posted_at":"...",
            }}
            …
        ]

        — без каких-либо пояснений, только JSON.